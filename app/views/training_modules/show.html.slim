= render 'debug'

div class="full-width-container govuk-!-margin-top-0 govuk-!-padding-top-7 govuk-!-padding-bottom-7 govuk-!-margin-bottom-4"
  h1.govuk-heading-l= @training_module.title

  p= @training_module.description

  - if @course_progress.completed?(@training_module)
    - button_text = "Retake end of module test"
    / to be updated
    - button_link = '#'
  - elsif @course_progress.started?(@training_module)
    - button_text = "Resume training"
    - button_link = training_module_content_page_path(@training_module, @module_progress.milestone)
  - else
    - button_text ='Start'
    - button_link = training_module_content_pages_path(@training_module)

  = govuk_button_to button_text, button_link, method: :get

strong class="govuk-tag govuk-!-margin-right-1 govuk-tag--green" #{@training_module.topic_count} topics
= govuk_tag(text: "#{@training_module.duration} hours", colour: 'green')

= render 'wip'

div class='govuk-!-margin-top-5'
  = govuk_accordion do |accordion|
    - prev_submodule_name = nil
    - @training_module.items_by_submodule.except(nil).each do |submodule_num, items|
      - summary_text = "#{prev_submodule_name} must be completed before you begin this section" unless prev_submodule_name.nil?
      - accordion.section(heading_text: items.first.model.heading, summary_text: summary_text) do
        
        ul class="govuk-list"
          - items[1..-1].each do |item|
            li
              = govuk_link_to item.model.heading, training_module_content_page_path(item.training_module, item)
              strong class="govuk-tag align-right" Completed
      - prev_submodule_name = items.first.model.heading
