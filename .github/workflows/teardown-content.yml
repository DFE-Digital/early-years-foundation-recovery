# ------------------------------------------------------------------------------
name: Teardown Content App

on:
  workflow_dispatch:
  pull_request:
    types:
      - closed

jobs:
  teardown-content:
    # conditional on "deployed" label
    # if: contains(github.event.pull_request.labels.*.name, 'deployed')
    runs-on: ubuntu-latest
    environment: production
    env:
      PR_NUMBER: pr-${{ github.event.number }}
    steps:
      -
        name: Checkout Code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      -
        name: Pin Terraform version
        uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: 1.1.7
      -
        name: Install Cloud Foundry CLI
        uses: DFE-Digital/github-actions/setup-cf-cli@master
        with:
          # default arg values
          # CF_CLI_VERSION: v7
          # CF_ORG_NAME: dfe
          # CF_API_URL:  https://api.london.cloud.service.gov.uk
          # INSTALL_CONDUIT: false
          CF_USERNAME: ${{ secrets.CLOUD_FOUNDRY_USERNAME }}
          CF_PASSWORD: ${{ secrets.CLOUD_FOUNDRY_PASSWORD }}
          CF_SPACE_NAME: ey-recovery-content
      -
        name: Drop branch database and delete application
        # TODO: shared db service across features?
        # cf delete-service ey-recovery-postgres-review -f
        # or
        # drop table in app first
        # cf ssh ey-recovery-${{ env.REVIEW_PR_NUMBER }} -c 'cd /src; export PATH=$PATH:/usr/local/bundle/bin:/usr/local/bin rails db:drop'
        # cf login -s $CF_SPACE_NAME
        run: |
          cf ssh ey-recovery-${{ env.PR_NUMBER }} -c 'source .profile; cd $APP_HOME; rails db:drop'
          cf stop ey-recovery-${{ env.PR_NUMBER }}
          cf unbind-service ey-recovery-${{ env.PR_NUMBER }} ey-recovery-db-review
          cf delete ey-recovery-${{ env.PR_NUMBER }} -r -f
