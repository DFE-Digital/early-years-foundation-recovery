---
# ------------------------------------------------------------------------------
#
name: Deploy Review App
on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    env:
      DOCKER_IMAGE: ghcr.io/dfe-digital/early-years-foundation-recovery-review

    steps:
      -
        # The pull request number.
        # ghcr.io/dfe-digital/early-years-foundation-recovery-review:review-pr-xx
        name: setup-inputs
        run: |
          echo "ENVIRONMENT=review-pr-${{ github.event.number }}" >> $GITHUB_ENV
      -
        name: Checkout Code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      -
        name: Pin Terraform version
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_version: 0.14.0
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push Docker production image
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            SHA=${{ github.event.pull_request.head.sha }}
          cache-from: |
            ${{ env.DOCKER_IMAGE }}:${{ env.ENVIRONMENT }}
            ${{ env.DOCKER_IMAGE }}:latest
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:${{ github.event.pull_request.head.sha }}
            ${{ env.DOCKER_IMAGE }}:${{ env.ENVIRONMENT }}
            ${{ env.DOCKER_IMAGE }}:latest
          target: app
      -
        name: Deploy Review App (init)
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_paas_cf_user: ${{ secrets.CLOUD_FOUNDRY_USERNAME }}
          TF_VAR_paas_cf_password: ${{ secrets.CLOUD_FOUNDRY_PASSWORD }}
        run: |
          env | sort
          export TF_VAR_paas_app_docker_image=${{ env.DOCKER_IMAGE }}:${{ github.event.pull_request.head.sha }}
          cd terraform/app
          terraform init -reconfigure -input=false -backend-config="bucket=${{ secrets.AWS_BUCKET }}" -backend-config="key=${{ env.ENVIRONMENT }}/terraform.tfstate"

      # -
      #   name: Deploy Review App (plan)
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     TF_VAR_paas_cf_user: ${{ secrets.CLOUD_FOUNDRY_USERNAME }}
      #     TF_VAR_paas_cf_password: ${{ secrets.CLOUD_FOUNDRY_PASSWORD }}
      #   run: |
      #     export TF_VAR_paas_app_docker_image=${{ env.DOCKER_IMAGE }}:${{ github.event.pull_request.head.sha }}
      #     cd terraform/app
      #     terraform plan -var-file ../workspace-variables/review.tfvars


      -
        name: Deploy Review App (apply)
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_paas_cf_user: ${{ secrets.CLOUD_FOUNDRY_USERNAME }}
          TF_VAR_paas_cf_password: ${{ secrets.CLOUD_FOUNDRY_PASSWORD }}
        run: |
          export TF_VAR_paas_app_docker_image=${{ env.DOCKER_IMAGE }}:${{ github.event.pull_request.head.sha }}
          cd terraform/app
          terraform apply -input=false -auto-approve -var-file ../workspace-variables/review.tfvars -var='paas_app_env_secrets={"RAILS_MASTER_KEY":"${{secrets.RAILS_MASTER_KEY}}", "AWS_ACCESS_KEY_ID": "${{secrets.AWS_ACCESS_KEY_ID}}", "AWS_SECRET_ACCESS_KEY": "${{secrets.AWS_SECRET_ACCESS_KEY}}", "AWS_REGION": "${{secrets.AWS_REGION}}", "AWS_BUCKET": "${{secrets.AWS_BUCKET}}"}' -var='environment=${{env.ENVIRONMENT}}'


        # run: |
        #   echo "ENV:"
        #   echo ${{ env }}
        #   export TF_VAR_paas_app_docker_image=${{ env.DOCKER_IMAGE }}:${{ github.event.pull_request.head.sha }}
        #   cd terraform/app
        #   terraform init \
        #     -reconfigure \
        #     -input=false \
        #     -backend-config="bucket=${{ secrets.AWS_BUCKET }}" \
        #     -backend-config="key=review/terraform.tfstate"
        #   terraform plan -var-file ../workspace-variables/review.tfvars
        #   terraform apply \
        #     -input=false \
        #     -auto-approve \
        #     -var-file ../workspace-variables/review.tfvars \
        #     -var='paas_app_env_secrets={
        #       "RAILS_MASTER_KEY": "${{ secrets.RAILS_MASTER_KEY }}",
        #       "AWS_ACCESS_KEY_ID": "${{ secrets.AWS_ACCESS_KEY_ID }}",
        #       "AWS_SECRET_ACCESS_KEY": "${{ secrets.AWS_SECRET_ACCESS_KEY }}",
        #       "AWS_BUCKET": "${{ secrets.AWS_BUCKET }}"
        #     }'
