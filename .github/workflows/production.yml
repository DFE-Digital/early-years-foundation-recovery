# https://docs.github.com/en/actions/using-jobs/using-conditions-to-control-job-execution
# https://github.com/docker/build-push-action
# https://github.com/actions/checkout#Checkout-a-different-branch
---
# ------------------------------------------------------------------------------
# - Manually deploy tagged version
# - Automatically deploy latest tagged version (WIP)
# - Rebuilding cached docker image and tagging with version number (WIP)
#
# ghcr.io/dfe-digital/early-years-foundation-recovery:v1
#
# https://ey-recovery.london.cloudapps.digital
#
name: Deploy Production App
on:
  workflow_dispatch:
    inputs:
      version:
        description: Version to deploy
        required: true
  push:
    tags:
      - v*

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    env:
      WORKSPACE: production
      DOCKER_IMAGE: ghcr.io/dfe-digital/early-years-foundation-recovery
      # app variables
      APP_URL: eyfs-covid-recovery.london.cloudapps.digital
      DOMAIN: eyfs-covid-recovery.london.cloudapps.digital
      GOVUK_APP_DOMAIN: eyfs-covid-recovery.london.cloudapps.digital
      GOVUK_WEBSITE_ROOT: eyfs-covid-recovery.london.cloudapps.digital
    steps:
      -
        name: Checkout Code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.version || github.ref_name }}
      -
        name: Pin Terraform version
        uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: 1.1.7
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          target: app
          context: .
          push: true
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            SHA=${{ github.sha }}
          cache-from: |
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
            ${{ env.DOCKER_IMAGE }}:${{ github.ref_name }}
          tags: |
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
            ${{ env.DOCKER_IMAGE }}:${{ github.ref_name }}
      -
        name: Production Release
        env:
          # init
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # plan/apply
          TF_VAR_paas_cf_user: ${{ secrets.CLOUD_FOUNDRY_USERNAME }}
          TF_VAR_paas_cf_password: ${{ secrets.CLOUD_FOUNDRY_PASSWORD }}
          TF_VAR_paas_app_docker_image: ${{ env.DOCKER_IMAGE }}:${{ github.ref_name }}
          TF_VAR_paas_app_env_secrets: ${{ toJson(secrets) }}
          TF_VAR_paas_app_envs: ${{ toJson(env) }}
        run: |
          cd terraform/app
          terraform init \
            -reconfigure \
            -input=false \
            -backend-config="bucket=${{ secrets.AWS_BUCKET }}" \
            -backend-config="key=${{ env.WORKSPACE }}/terraform.tfstate"
          terraform plan \
            -var-file ../workspace-variables/${{ env.WORKSPACE }}.tfvars
          terraform apply \
            -input=false \
            -auto-approve \
            -var-file ../workspace-variables/${{ env.WORKSPACE }}.tfvars
      -
        name: Install Cloud Foundry CLI
        uses: DFE-Digital/github-actions/setup-cf-cli@master
        with:
          CF_USERNAME: ${{ secrets.CLOUD_FOUNDRY_USERNAME }}
          CF_PASSWORD: ${{ secrets.CLOUD_FOUNDRY_PASSWORD }}
          CF_SPACE_NAME: ey-recovery
      -
        name: Map production DNS route
        run: |
          cf map-route ey-recovery london.cloudapps.digital --hostname eyfs-covid-recovery
        # cf map-route ey-recovery education.gov.uk --hostname eyfs-covid-recovery
