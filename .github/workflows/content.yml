---
# ------------------------------------------------------------------------------
# Build image:
#   ghcr.io/dfe-digital/early-years-foundation-recovery:pr-123
#
# Deploy to:
#   https://ey-recovery-pr-123.london.cloudapps.digital
#
name: Deploy Content App
on:
  pull_request:
    branches:
      - main
    types:
      - labeled                 # a label is applied to the pull request
      - synchronize             # commit(s) pushed to the pull request
      - ready_for_review        # pull request is taken out from draft mode
      # - assigned                # a user is assigned to the pull request
      # - unassigned              # a user is unassigned from the pull request
      # - unlabeled               # a label is removed from the pull request
      # - opened                  # pull request is created
      # - edited                  # title, body, or the base branch of the PR is modified
      # - closed                  # pull request is closed (as opposed to merged)
      # - reopened                # closed pull request is reopened
      # - locked                  # pull request is locked
      # - unlocked                # pull request is unlocked
      # - review_requested        # request a user for review
      # - review_request_removed  # remove request from user for review

jobs:
  deploy:
    if: contains(github.event.pull_request.labels.*.name, 'deployed')
    runs-on: ubuntu-latest
    environment: content
    env:
      WORKSPACE: content
      REGISTRY: ghcr.io/dfe-digital/early-years-foundation-recovery
      PR_NUMBER: pr-${{ github.event.number }}
      # @see terraform/workspace-variables/app_config.yml[:content]
      DOMAIN: ey-recovery-pr-${{ github.event.number }}.london.cloudapps.digital
      GOVUK_WEBSITE_ROOT: ey-recovery-pr-${{ github.event.number }}
    steps:
      -
        name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      -
        name: Pin Terraform version
        uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: 1.1.7
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push Docker image for dependencies
        uses: docker/build-push-action@v3
        with:
          context: .
          build-args: BUILDKIT_INLINE_CACHE=1
          cache-from: |
            ${{ env.REGISTRY }}:deps
          push: true
          tags: ${{ env.REGISTRY }}:deps
          target: deps
      -
        name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          target: app
          context: .
          push: true
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            SHA=${{ github.event.pull_request.head.sha }}
          cache-from: |
            ${{ env.REGISTRY }}:${{ github.event.pull_request.head.sha }}
            ${{ env.REGISTRY }}:${{ env.PR_NUMBER }}
          tags: |
            ${{ env.REGISTRY }}:${{ github.event.pull_request.head.sha }}
            ${{ env.REGISTRY }}:${{ env.PR_NUMBER }}
      -
        name: Deploy Review App
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_paas_cf_user: ${{ secrets.CLOUD_FOUNDRY_USERNAME }}
          TF_VAR_paas_cf_password: ${{ secrets.CLOUD_FOUNDRY_PASSWORD }}
          TF_VAR_paas_app_docker_image: ${{ env.REGISTRY }}:${{ github.event.pull_request.head.sha }}
          TF_VAR_paas_app_hostname: ${{ env.PR_NUMBER }}
          TF_VAR_paas_app_env_secrets: ${{ toJson(secrets) }}
          TF_VAR_paas_app_envs: ${{ toJson(env) }}
        run: |
          cd terraform/app
          terraform init \
            -reconfigure \
            -input=false \
            -backend-config="bucket=${{ secrets.AWS_BUCKET }}" \
            -backend-config="key=${{ env.PR_NUMBER }}/terraform.tfstate"
          terraform plan \
            -var-file ../workspace-variables/${{ env.WORKSPACE }}.tfvars
          terraform apply \
            -input=false \
            -auto-approve \
            -var-file ../workspace-variables/${{ env.WORKSPACE }}.tfvars

      - name: Comment URL to PR
        uses: mshick/add-pr-comment@v1
        with:
          message: https://ey-recovery-${{ env.PR_NUMBER }}.london.cloudapps.digital
          repo-token: ${{ secrets.GITHUB_TOKEN }}
