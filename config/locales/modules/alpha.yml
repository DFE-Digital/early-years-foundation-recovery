---
# ------------------------------------------------------------------------------
en:
  modules:
    alpha:
      what-to-expect:
        # preamble
      1-1:
        heading: Glossary of terms
        body: |

          Information for onboarding content editors:

          - `CMS`: Content Management System.
          - `ERD`: Entity Relationship Diagram. (tbc in UML)
          - `Space`: The Early Years Recovery content, team management, release schedule, mock data for application test, all exist within a space.
          - `Alias`: Content in environments is accessed using aliases. The target an alias points to can be changed. We have access to three aliases.
          - `Environment`: Content exists within an environment. We have access to four environments.
          - `Content model`: The entities used to author entries. Used to define attributes, validations and control the editor interface. For example `Training Module`, `Question`
          - `Content`: Instances of a content model. Used to create entries.
          - `Master content`: The alias used by the public facing website which links to an environment. The environments this can point to can be named, cloned and destroyed by the content team.
          - `Staging content`: An alias linking to an environment that can be used for testing, demoing. A potential use for this is when significant changes are made to models and code together.
          - `Test content`: The alias used by the developer integration pipeline which links to the demo environment.
          - `Demo content`: The environment linked to by the test alias containing a simplified abstraction of course content.
          - `Integrity check`: An automated checklist to determine whether module content meets minimum standards.
          - `Release`: A scheduled action that publishes a collection of content entries.
          - `Launch`: The Contentful product that allows content editors to orchestrate a release.
          - `Webhook`: A method of communication used by the CMS to alert a deployed environment that content has changed.
          - `Cache`: An automatic snapshot of course content used to speed up pages in the browser.
          - `Production deployment`: The public facing application using the current code and published content.
          - `Staging deployment`: The latest code release candidate accessing draft content.
          - `Development deployment`: The latest code accessing demo content. (currently standing in for production)
          - `Review deployment`: A temporary deployment that can use either the Delivery or Preview APIs, demo or genuine content.
          - `API`: Application Programming Interface.
          - `Delivery API`: The mechanism that returns published content.
          - `Preview API`: The mechanism that returns both published and draft content.

      1-1-1:
        heading: bar
        body: |
          foo
      1-1-2:
        heading: bar
        body: |
          foo
        video:
          id: 807903195
          title: Stuff
          provider: vimeo
      1-1-3:
        heading: bar
        body: |
          foo
      1-1-4:
        heading: bar
        body: |
          foo
      1-1-5:
        heading: bar
        body: |
          foo
      1-1-6:
        heading: bar
        body: |
          foo
      1-1-7:
        heading: bar
        body: |
          foo
      1-1-8:
        heading: bar
        body: |
          foo
      1-1-9:
        heading: bar
        body: |
          foo
      1-1-10:
        heading: bar
        body: |
          foo

      # --------------------------------------
      1-2:
        heading: sub intro
        body: |
          foo
      1-2-1:
        heading: topic intro
        body: |
          foo
      1-2-1-1:
        # question
      1-2-1-2:
        # question
      1-2-1-3:
        # question
      1-2-1-4:
        # question
      1-2-1-5:
        # question

      # --------------------------------------
      1-3:
        # summary intro
      1-3-1:
        heading: Recap
        body: |
          ## What we have covered

          - What is a content management system?
          - What is a content environment?
          - What is a content model?

          ## Followup activities

          - Request Contentful account access
          - Create management API key if a developer
          - Create an account on the staging application

          ## Further reading

          - <link>
          - <link>
          - <link>

      1-3-2:
        # assessment intro
      1-3-2-1:
        # question
      1-3-2-2:
        # question
      1-3-2-3:
        # question
      1-3-2-4:
        # question
      1-3-2-5:
        # question
      1-3-2-6:
        # question
      1-3-2-7:
        # question
      1-3-2-8:
        # question
      1-3-2-9:
        # question
      1-3-2-10:
        # question
      1-3-2-11:
        # results

      1-3-3:
        # confidence intro
      1-3-3-1:
        # question
      1-3-3-2:
        # question
      1-3-3-3:
        # question
      1-3-3-4:
        # question
      1-3-3-5:
        form: xxxxx

      1-3-4:
        # certificate
