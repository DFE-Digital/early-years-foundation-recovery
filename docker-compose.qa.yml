# ------------------------------------------------------------------------------
# Seed the production database:
#
#   $ docker exec -it recovery_prod rails db:seed
#
---
services:
  app:
    command: rails server -b 'ssl://0.0.0.0:3000?key=localhost.key&cert=localhost.crt'
    healthcheck:
      test: curl --fail --insecure https://localhost:3000/health || exit 1
    environment:
      - DATABASE_URL=postgres://postgres:password@db:5432/early_years_foundation_recovery_production
      - DOMAIN=https://localhost:3000
      # overrides
      - WORKSPACE
      - USER_PASSWORD
      - TIMEOUT_MINUTES
      - CONTENTFUL_ENVIRONMENT
      - CONTENTFUL_PREVIEW
    volumes:
      # NB: or ensure RAILS_MASTER_KEY=<production master key> is in .env
      - ./config/credentials/production.key:/srv/config/credentials/production.key
      # NB: run ./bin/docker-certs to generate a self-signed certificate
      - ./localhost.key:/srv/localhost.key
      - ./localhost.crt:/srv/localhost.crt

  qa:
    container_name: recovery_qa
    build:
      context: .
      target: qa
    image: recovery:qa
    environment:
      - BASE_URL
      - BROWSER
      - DRIVER
      - USER_PASSWORD
      - E2E
    depends_on:
      app:
        condition: service_healthy
      chrome:
        condition: service_healthy
      firefox:
        condition: service_healthy
    networks:
      - recovery
    tty: true
    stdin_open: true

  chrome:
    container_name: recovery_chrome
    image: selenium/standalone-chrome:latest
    ports:
      - 4441:4444
    healthcheck:
      test: curl --fail http://localhost:4444 || exit 1
    networks:
      - recovery

  firefox:
    container_name: recovery_firefox
    image: selenium/standalone-firefox:latest
    ports:
      - 4442:4444
    healthcheck:
      test: curl --fail http://localhost:4444 || exit 1
    networks:
      - recovery
